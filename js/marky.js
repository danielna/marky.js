// Generated by CoffeeScript 1.6.3
(function() {
  var D, FF, clearOldPositions, documentHeight, getPositions, hasLocalStorage, markyBtn, markyBtnDom, markyTextDiv, removePosition, renderPositions, resetAll, resetMarkers, savePosition, windowHeight, _markycss;

  hasLocalStorage = localStorage ? true : false;

  markyBtn = document.getElementById("marky-btn");

  _markycss = document.createElement('link');

  _markycss.setAttribute('href', 'css/marky.css');

  _markycss.setAttribute('rel', 'stylesheet');

  _markycss.setAttribute('type', 'text/css');

  document.getElementsByTagName('head')[0].appendChild(_markycss);

  FF = window.mozInnerScreenX === !null;

  if (hasLocalStorage && !markyBtn) {
    markyBtnDom = document.createElement('a');
    markyBtnDom.id = 'marky-btn';
    markyBtnDom.href = '#';
    markyBtnDom.innerHTML = 'mark!';
    document.getElementsByTagName('body')[0].appendChild(markyBtnDom);
    markyTextDiv = document.createElement('div');
    markyTextDiv.id = 'marky-text-container';
    markyTextDiv.innerHTML = '<input type="text" id="marky-text">';
    document.getElementsByTagName('body')[0].appendChild(markyTextDiv);
    markyBtn = document.getElementById("marky-btn");
    D = document;
    documentHeight = Math.max(D.body.scrollHeight, D.documentElement.scrollHeight, D.body.offsetHeight, D.documentElement.offsetHeight, D.body.clientHeight, D.documentElement.clientHeight);
    windowHeight = window.innerHeight;
    Object.size = function(obj) {
      var key, size, _i, _len;
      size = 0;
      for (_i = 0, _len = obj.length; _i < _len; _i++) {
        key = obj[_i];
        if (obj.hasOwnProperty(key)) {
          size++;
        }
      }
      return size;
    };
    markyBtn.onclick = function(e) {
      var markyText, markyTextContainer, scrollPos;
      e.preventDefault();
      if (this.className === "active") {
        return resetAll();
      }
      markyTextContainer = document.getElementById("marky-text-container");
      markyText = document.getElementById("marky-text");
      scrollPos = FF ? document.documentElement.scrollTop : document.body.scrollTop;
      this.className = "active";
      markyTextContainer.style.display = "block";
      markyTextContainer.setAttribute("data-pos", scrollPos);
      markyText.onkeypress = function(e) {
        if (e.keyCode === 13) {
          savePosition(markyTextContainer.getAttribute("data-pos"), markyText.value);
        }
      };
    };
    savePosition = function(pos, name) {
      var markyStore, now, nowDateString, obj;
      now = new Date();
      nowDateString = now.getMonth() + "/" + now.getDate() + "- " + now.getHours() + ":" + now.getMinutes();
      obj = {};
      name = name != null ? name : "";
      obj[pos] = name;
      if (localStorage.getItem("marky-btn")) {
        markyStore = JSON.parse(localStorage.getItem("marky-btn"));
        markyStore[pos] = name;
      }
      if (markyStore) {
        obj = markyStore;
      }
      localStorage.setItem("marky-btn", JSON.stringify(obj));
      renderPositions();
      resetAll();
    };
    removePosition = function(pos) {
      var markyStore;
      if (localStorage.getItem("marky-btn")) {
        markyStore = JSON.parse(localStorage.getItem("marky-btn"));
        if (markyStore[pos]) {
          delete markyStore[pos];
        }
        localStorage.setItem("marky-btn", JSON.stringify(markyStore));
        renderPositions();
        resetAll();
      }
    };
    getPositions = function() {
      return JSON.parse(localStorage.getItem("marky-btn"));
    };
    clearOldPositions = function() {
      var marker, markers, _i, _len, _results;
      markers = document.getElementsByClassName('marky-mark');
      _results = [];
      for (_i = 0, _len = markers.length; _i < _len; _i++) {
        marker = markers[_i];
        if (marker) {
          _results.push(marker.parentNode.removeChild(marker));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    renderPositions = function() {
      var markPositions, marker, markers, position, temp, top, _i, _len;
      clearOldPositions();
      markPositions = getPositions();
      for (position in markPositions) {
        top = Math.floor((position / (documentHeight - windowHeight)) * windowHeight) + "px";
        temp = document.createElement('div');
        temp.innerHTML = "<span class='title'>" + markPositions[position] + "</span><span class='close' title='Delete'>[x]</span><span class='edge'></span>";
        temp.className = 'marky-mark';
        temp.style.top = top;
        temp.setAttribute("data-loc", position);
        document.getElementsByTagName('body')[0].appendChild(temp);
      }
      markers = document.getElementsByClassName('marky-mark');
      for (_i = 0, _len = markers.length; _i < _len; _i++) {
        marker = markers[_i];
        marker.onclick = function(e) {
          var pos, removeLocation, target;
          e.preventDefault();
          target = e.target;
          if (target.className === "close") {
            removeLocation = target.parentNode.getAttribute("data-loc");
            removePosition(removeLocation);
            renderPositions();
          } else {
            this.className = this.className + " active";
            pos = this.getAttribute("data-loc");
            window.scrollTo(0, pos);
            resetMarkers();
          }
        };
      }
    };
    resetMarkers = function() {
      var marker, markers, _i, _len;
      markers = document.getElementsByClassName('marky-mark');
      for (_i = 0, _len = markers.length; _i < _len; _i++) {
        marker = markers[_i];
        marker.className = "marky-mark";
      }
    };
    resetAll = function() {
      document.getElementById("marky-text-container").style.display = "none";
      document.getElementById("marky-text-container").removeAttribute("data-pos");
      document.getElementById("marky-text").value = "";
      return document.getElementById("marky-btn").className = "";
    };
    renderPositions();
  }

}).call(this);
